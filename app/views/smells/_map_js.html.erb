<script>
 // Load on page ready...
 $(document).ready(function(){
     var map;
     // define function to get user location
     function getLocation() {
         if (navigator.geolocation) {
             navigator.geolocation.getCurrentPosition(parsePosition);
         }
         // TODO: Add fall-back if user doesn't give location
     }

     // define callback for getCurrentPosition function of getLocation()
     function parsePosition(position) {
         var latitude = position.coords.latitude;
         var longitude = position.coords.longitude;
         insertMap(latitude, longitude);
     }

     // Define a function that inserts a map in 'map_canvas' at the user's location
     function insertMap(latitude, longitude) {
         var mapCanvas = document.getElementById('map-canvas');
         var mapOptions = {
             center: new google.maps.LatLng(latitude, longitude),
             zoom: 8,
             mapTypeId: google.maps.MapTypeId.ROADMAP
         }
         map = new google.maps.Map(mapCanvas, mapOptions);
         <% myArray = smells.map do |smell| %>
         <% [smell.lat, smell.lng, smell.id] %>
         <% end %>
         var locations = <%= myArray %>;
         // locations = [[0.00000, 0.00000, 1], [0.00000, 0.00000, 2]]
         var marker, i;
         for (i = 0; i < locations.length; i++) {
             marker = new google.maps.Marker({
                 position: new google.maps.LatLng(locations[i][0], locations[i][1]),
                 map: map,
                 smell_id: locations[i][2]
             });
             google.maps.event.addListener(marker, 'click', function() {
                 var smell_id = this.smell_id;
                 var selector = '[data-smell-id="' + smell_id + '"]';
                 $('.row').animate({
                     scrollTop: $(selector).offset().top - $('#left').offset().top + $('#left').scrollTop() - 200
                 });
                 $('.panel-primary').toggleClass('panel-primary', 'panel-default');
                 $(selector + ' .panel').toggleClass('panel-primary', 'panel-default');
             });
         };
         google.maps.event.addListener(map, 'bounds_changed', function() {
             // Get bounds
             var bounds = this.getBounds();
             // Add/remove elements as necessary
             $('.smell').each(function(){
                 var smellLatLng = new google.maps.LatLng(this.getAttribute('data-lat'), this.getAttribute('data-lng'));
                 if (bounds.contains(smellLatLng)) {
                     $(this).show();
                 } else {
                     $(this).hide();
                 };
             });
         });
     };

     function addMarker(smell) {
         marker = new google.maps.Marker({
             position: new google.maps.LatLng(smell.lat, smell.lng),
             map: map,
             smell_id: smell.id
         });
         google.maps.event.addListener(marker, 'click', function() {
             var smell_id = this.smell_id;
             var selector = '[data-smell-id="' + smell_id + '"]';
             //  $(selector)
             debugger;
         });
     }

     function addSideBarElement(smell) {
         var $sideBar = $('<div>', {
             class: "panel panel-default"
         });

         var $sideBarElementHeader = $('<div>', {
             class: "panel-heading"
         }).append($('<a>',{
             text: "@" + smell.user.twitter_handle,
             href:"https://twitter.com/" + smell.user.twitter_handle
         }));
         $sideBarElementHeader.append(" reported a smell just now");

         var $sideBarElementBody = $('<div>',{
             class: 'panel-body'
         }).text(smell.content);

         $sideBar.append($sideBarElementHeader, $sideBarElementBody);

         var $sideBarWrapper = $('<div>', {
             class: "smell"
         });

         $sideBarWrapper.attr("data-lat",smell.lat);
         $sideBarWrapper.attr("data-lng",smell.lng);
         $sideBarWrapper.attr("data-smell-id",smell.id);
         $sideBarWrapper.append($sideBar);

         $('#left').prepend($sideBarWrapper);
     }

     // Bind resize event to Google Map on window resize
     $(window).resize(function() {
         google.maps.event.trigger(map, "resize");
     });

     // Initialize map
     getLocation();

     // Connect to websocket
     var dispatcher = new WebSocketRails('www.itsmellshere.com/websocket');
     var channel = dispatcher.subscribe('smells');
     channel.bind('new', function(smell) {
         // Add marker when smell added to database
         addMarker(smell);
         // Add sideBarElement
         addSideBarElement(smell);
     });

     //$('#add-new-smell').on('click', function() {
       //  window.open("/tweet_link");
    // });
 });
</script>
